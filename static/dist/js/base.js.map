{"version":3,"sources":["zepto.js","util.js"],"names":["global","factory","define","amd","this","window","Zepto","type","obj","String","class2type","toString","call","isFunction","value","isWindow","isDocument","nodeType","DOCUMENT_NODE","isObject","isPlainObject","Object","getPrototypeOf","prototype","likeArray","length","$","compact","array","filter","item","flatten","fn","concat","apply","dasherize","str","replace","toLowerCase","classRE","name","classCache","RegExp","maybeAddPx","cssNumber","defaultDisplay","nodeName","element","display","elementDisplay","document","createElement","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","children","slice","map","childNodes","node","Z","dom","selector","i","len","extend","target","source","deep","key","isArray","undefined","filtered","nodes","funcArg","context","arg","idx","payload","setAttribute","removeAttribute","className","klass","svg","baseVal","deserializeValue","test","parseJSON","e","traverseNode","fun","classList","camelize","uniq","emptyArray","column-count","columns","font-weight","line-height","opacity","z-index","zoom","fragmentRE","singleTagRE","tagExpanderRE","rootNodeRE","capitalRE","methodAttributes","adjacencyOperators","table","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","readyRE","simpleSelectorRE","zepto","tempParent","propMap","tabindex","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","Array","object","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","match","parent","temp","qsa","indexOf","chr","toUpperCase","fragment","html","properties","container","$1","innerHTML","each","attr","isZ","init","trim","find","ready","args","arguments","shift","forEach","found","maybeID","maybeClass","nameOnly","isSimple","getElementById","getElementsByClassName","getElementsByTagName","querySelectorAll","contains","documentElement","isEmptyObject","isNumeric","val","num","Number","isNaN","isFinite","inArray","elem","camelCase","uuid","support","expr","noop","elements","callback","values","push","grep","JSON","parse","split","constructor","reduce","sort","splice","toArray","el","readyState","addEventListener","get","size","remove","every","not","add","is","excludes","has","eq","first","last","$this","some","closest","collection","_","parents","ancestors","pluck","contents","contentDocument","siblings","child","empty","property","show","style","replaceWith","newContent","before","wrap","structure","func","clone","index","wrapAll","cloneNode","append","wrapInner","self","unwrap","hide","css","toggle","setting","prev","next","originHtml","text","newText","textContent","join","result","getAttribute","removeAttr","attribute","prop","removeProp","data","attrName","multiple","selected","offset","coordinates","coords","parentOffset","offsetParent","props","top","left","getBoundingClientRect","pageXOffset","pageYOffset","width","Math","round","height","computedStyle","removeProperty","cssText","hasClass","addClass","cls","removeClass","toggleClass","when","scrollTop","hasScrollTop","scrollTo","scrollX","scrollLeft","hasScrollLeft","scrollY","position","parseFloat","detach","dimension","dimensionProperty","m","operator","operatorIndex","inside","argType","arr","copyByClone","nextSibling","firstChild","parentInDocument","insertBefore","src","ownerDocument","defaultView","zid","_zid","findHandlers","event","ns","matcher","matcherFor","handlers","handler","sel","parts","eventCapture","captureSetting","del","focusinSupported","focus","realEvent","hover","events","delegator","capture","id","set","related","relatedTarget","proxy","compatible","isImmediatePropagationStopped","_args","preventDefault","stopPropagation","removeEventListener","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","timeStamp","Date","now","defaultPrevented","returnValue","getPreventDefault","createProxy","originalEvent","ignoreProperties","isString","specialEvents","blur","mouseenter","mouseleave","click","mousedown","mouseup","mousemove","proxyFn","unshift","TypeError","bind","on","unbind","off","one","stopImmediatePropagation","delegate","undelegate","live","die","autoRemove","evt","currentTarget","liveFired","trigger","Event","dispatchEvent","triggerHandler","createEvent","bubbles","initEvent","triggerAndReturn","eventName","triggerGlobal","settings","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","deferred","success","resolveWith","ajaxComplete","ajaxError","error","rejectWith","status","complete","ajaxDataFilter","dataFilter","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","url","query","serializeData","options","processData","param","traditional","dataType","parseArguments","serialize","params","scope","hash","jsonpID","rscript","blankRE","originAnchor","href","location","ajaxJSONP","ajax","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","script","originalCallback","abort","errorType","promise","clearTimeout","head","timeout","setTimeout","ajaxSettings","XMLHttpRequest","accepts","json","xml","crossDomain","cache","urlAnchor","hashIndex","Deferred","protocol","host","hasPlaceholder","jsonp","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseType","response","responseText","eval","responseXML","statusText","async","open","username","password","xhrFields","send","post","getJSON","load","escape","encodeURIComponent","serializeArray","field","disabled","checked","elm","submit","nativeGetComputedStyle","pseudoElement","jky","util","getQueryString","reg","r","search","substr","getRequest","theRequest","strs","setRequest","paramsStrLIst","pattern","throttle","wait","previous","later","leading","valueOf","remaining","trailing","correctrem","rem_full_width","appendTo","device_width","clientWidth","fontSize","toast","msg","time","cb","$toastEl"],"mappings":"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","file":"base.js","sourcesContent":["/* Zepto v1.2.0 - zepto event ajax form ie - zeptojs.com/license */\n(function(global, factory) {\n  if (typeof define === 'function' && define.amd)\n    define(function() { return factory(global) })\n  else\n    factory(global)\n}(this, function(window) {\n  var Zepto = (function() {\n  var undefined, key, $, classList, emptyArray = [], concat = emptyArray.concat, filter = emptyArray.filter, slice = emptyArray.slice,\n    document = window.document,\n    elementDisplay = {}, classCache = {},\n    cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\n    fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n    singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n    tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n    rootNodeRE = /^(?:body|html)$/i,\n    capitalRE = /([A-Z])/g,\n\n    // special attributes that should be get/set via method calls\n    methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\n    adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\n    table = document.createElement('table'),\n    tableRow = document.createElement('tr'),\n    containers = {\n      'tr': document.createElement('tbody'),\n      'tbody': table, 'thead': table, 'tfoot': table,\n      'td': tableRow, 'th': tableRow,\n      '*': document.createElement('div')\n    },\n    readyRE = /complete|loaded|interactive/,\n    simpleSelectorRE = /^[\\w-]*$/,\n    class2type = {},\n    toString = class2type.toString,\n    zepto = {},\n    camelize, uniq,\n    tempParent = document.createElement('div'),\n    propMap = {\n      'tabindex': 'tabIndex',\n      'readonly': 'readOnly',\n      'for': 'htmlFor',\n      'class': 'className',\n      'maxlength': 'maxLength',\n      'cellspacing': 'cellSpacing',\n      'cellpadding': 'cellPadding',\n      'rowspan': 'rowSpan',\n      'colspan': 'colSpan',\n      'usemap': 'useMap',\n      'frameborder': 'frameBorder',\n      'contenteditable': 'contentEditable'\n    },\n    isArray = Array.isArray ||\n      function(object){ return object instanceof Array }\n\n  zepto.matches = function(element, selector) {\n    if (!selector || !element || element.nodeType !== 1) return false\n    var matchesSelector = element.matches || element.webkitMatchesSelector ||\n                          element.mozMatchesSelector || element.oMatchesSelector ||\n                          element.matchesSelector\n    if (matchesSelector) return matchesSelector.call(element, selector)\n    // fall back to performing a selector:\n    var match, parent = element.parentNode, temp = !parent\n    if (temp) (parent = tempParent).appendChild(element)\n    match = ~zepto.qsa(parent, selector).indexOf(element)\n    temp && tempParent.removeChild(element)\n    return match\n  }\n\n  function type(obj) {\n    return obj == null ? String(obj) :\n      class2type[toString.call(obj)] || \"object\"\n  }\n\n  function isFunction(value) { return type(value) == \"function\" }\n  function isWindow(obj)     { return obj != null && obj == obj.window }\n  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\n  function isObject(obj)     { return type(obj) == \"object\" }\n  function isPlainObject(obj) {\n    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype\n  }\n\n  function likeArray(obj) {\n    var length = !!obj && 'length' in obj && obj.length,\n      type = $.type(obj)\n\n    return 'function' != type && !isWindow(obj) && (\n      'array' == type || length === 0 ||\n        (typeof length == 'number' && length > 0 && (length - 1) in obj)\n    )\n  }\n\n  function compact(array) { return filter.call(array, function(item){ return item != null }) }\n  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\n  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\n  function dasherize(str) {\n    return str.replace(/::/g, '/')\n           .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n           .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n           .replace(/_/g, '-')\n           .toLowerCase()\n  }\n  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\n\n  function classRE(name) {\n    return name in classCache ?\n      classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\n  }\n\n  function maybeAddPx(name, value) {\n    return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n  }\n\n  function defaultDisplay(nodeName) {\n    var element, display\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName)\n      document.body.appendChild(element)\n      display = getComputedStyle(element, '').getPropertyValue(\"display\")\n      element.parentNode.removeChild(element)\n      display == \"none\" && (display = \"block\")\n      elementDisplay[nodeName] = display\n    }\n    return elementDisplay[nodeName]\n  }\n\n  function children(element) {\n    return 'children' in element ?\n      slice.call(element.children) :\n      $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\n  }\n\n  function Z(dom, selector) {\n    var i, len = dom ? dom.length : 0\n    for (i = 0; i < len; i++) this[i] = dom[i]\n    this.length = len\n    this.selector = selector || ''\n  }\n\n  // `$.zepto.fragment` takes a html string and an optional tag name\n  // to generate DOM nodes from the given html string.\n  // The generated DOM nodes are returned as an array.\n  // This function can be overridden in plugins for example to make\n  // it compatible with browsers that don't support the DOM fully.\n  zepto.fragment = function(html, name, properties) {\n    var dom, nodes, container\n\n    // A special case optimization for a single tag\n    if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))\n\n    if (!dom) {\n      if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\n      if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\n      if (!(name in containers)) name = '*'\n\n      container = containers[name]\n      container.innerHTML = '' + html\n      dom = $.each(slice.call(container.childNodes), function(){\n        container.removeChild(this)\n      })\n    }\n\n    if (isPlainObject(properties)) {\n      nodes = $(dom)\n      $.each(properties, function(key, value) {\n        if (methodAttributes.indexOf(key) > -1) nodes[key](value)\n        else nodes.attr(key, value)\n      })\n    }\n\n    return dom\n  }\n\n  // `$.zepto.Z` swaps out the prototype of the given `dom` array\n  // of nodes with `$.fn` and thus supplying all the Zepto functions\n  // to the array. This method can be overridden in plugins.\n  zepto.Z = function(dom, selector) {\n    return new Z(dom, selector)\n  }\n\n  // `$.zepto.isZ` should return `true` if the given object is a Zepto\n  // collection. This method can be overridden in plugins.\n  zepto.isZ = function(object) {\n    return object instanceof zepto.Z\n  }\n\n  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\n  // takes a CSS selector and an optional context (and handles various\n  // special cases).\n  // This method can be overridden in plugins.\n  zepto.init = function(selector, context) {\n    var dom\n    // If nothing given, return an empty Zepto collection\n    if (!selector) return zepto.Z()\n    // Optimize for string selectors\n    else if (typeof selector == 'string') {\n      selector = selector.trim()\n      // If it's a html fragment, create nodes from it\n      // Note: In both Chrome 21 and Firefox 15, DOM error 12\n      // is thrown if the fragment doesn't begin with <\n      if (selector[0] == '<' && fragmentRE.test(selector))\n        dom = zepto.fragment(selector, RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // If it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // If a function is given, call it when the DOM is ready\n    else if (isFunction(selector)) return $(document).ready(selector)\n    // If a Zepto collection is given, just return it\n    else if (zepto.isZ(selector)) return selector\n    else {\n      // normalize array if an array of nodes is given\n      if (isArray(selector)) dom = compact(selector)\n      // Wrap DOM nodes.\n      else if (isObject(selector))\n        dom = [selector], selector = null\n      // If it's a html fragment, create nodes from it\n      else if (fragmentRE.test(selector))\n        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // And last but no least, if it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // create a new Zepto collection from the nodes found\n    return zepto.Z(dom, selector)\n  }\n\n  // `$` will be the base `Zepto` object. When calling this\n  // function just call `$.zepto.init, which makes the implementation\n  // details of selecting nodes and creating Zepto collections\n  // patchable in plugins.\n  $ = function(selector, context){\n    return zepto.init(selector, context)\n  }\n\n  function extend(target, source, deep) {\n    for (key in source)\n      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n        if (isPlainObject(source[key]) && !isPlainObject(target[key]))\n          target[key] = {}\n        if (isArray(source[key]) && !isArray(target[key]))\n          target[key] = []\n        extend(target[key], source[key], deep)\n      }\n      else if (source[key] !== undefined) target[key] = source[key]\n  }\n\n  // Copy all but undefined properties from one or more\n  // objects to the `target` object.\n  $.extend = function(target){\n    var deep, args = slice.call(arguments, 1)\n    if (typeof target == 'boolean') {\n      deep = target\n      target = args.shift()\n    }\n    args.forEach(function(arg){ extend(target, arg, deep) })\n    return target\n  }\n\n  // `$.zepto.qsa` is Zepto's CSS selector implementation which\n  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\n  // This method can be overridden in plugins.\n  zepto.qsa = function(element, selector){\n    var found,\n        maybeID = selector[0] == '#',\n        maybeClass = !maybeID && selector[0] == '.',\n        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked\n        isSimple = simpleSelectorRE.test(nameOnly)\n    return (element.getElementById && isSimple && maybeID) ? // Safari DocumentFragment doesn't have getElementById\n      ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :\n      (element.nodeType !== 1 && element.nodeType !== 9 && element.nodeType !== 11) ? [] :\n      slice.call(\n        isSimple && !maybeID && element.getElementsByClassName ? // DocumentFragment doesn't have getElementsByClassName/TagName\n          maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class\n          element.getElementsByTagName(selector) : // Or a tag\n          element.querySelectorAll(selector) // Or it's not simple, and we need to query all\n      )\n  }\n\n  function filtered(nodes, selector) {\n    return selector == null ? $(nodes) : $(nodes).filter(selector)\n  }\n\n  $.contains = document.documentElement.contains ?\n    function(parent, node) {\n      return parent !== node && parent.contains(node)\n    } :\n    function(parent, node) {\n      while (node && (node = node.parentNode))\n        if (node === parent) return true\n      return false\n    }\n\n  function funcArg(context, arg, idx, payload) {\n    return isFunction(arg) ? arg.call(context, idx, payload) : arg\n  }\n\n  function setAttribute(node, name, value) {\n    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\n  }\n\n  // access className property while respecting SVGAnimatedString\n  function className(node, value){\n    var klass = node.className || '',\n        svg   = klass && klass.baseVal !== undefined\n\n    if (value === undefined) return svg ? klass.baseVal : klass\n    svg ? (klass.baseVal = value) : (node.className = value)\n  }\n\n  // \"true\"  => true\n  // \"false\" => false\n  // \"null\"  => null\n  // \"42\"    => 42\n  // \"42.5\"  => 42.5\n  // \"08\"    => \"08\"\n  // JSON    => parse if valid\n  // String  => self\n  function deserializeValue(value) {\n    try {\n      return value ?\n        value == \"true\" ||\n        ( value == \"false\" ? false :\n          value == \"null\" ? null :\n          +value + \"\" == value ? +value :\n          /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\n          value )\n        : value\n    } catch(e) {\n      return value\n    }\n  }\n\n  $.type = type\n  $.isFunction = isFunction\n  $.isWindow = isWindow\n  $.isArray = isArray\n  $.isPlainObject = isPlainObject\n\n  $.isEmptyObject = function(obj) {\n    var name\n    for (name in obj) return false\n    return true\n  }\n\n  $.isNumeric = function(val) {\n    var num = Number(val), type = typeof val\n    return val != null && type != 'boolean' &&\n      (type != 'string' || val.length) &&\n      !isNaN(num) && isFinite(num) || false\n  }\n\n  $.inArray = function(elem, array, i){\n    return emptyArray.indexOf.call(array, elem, i)\n  }\n\n  $.camelCase = camelize\n  $.trim = function(str) {\n    return str == null ? \"\" : String.prototype.trim.call(str)\n  }\n\n  // plugin compatibility\n  $.uuid = 0\n  $.support = { }\n  $.expr = { }\n  $.noop = function() {}\n\n  $.map = function(elements, callback){\n    var value, values = [], i, key\n    if (likeArray(elements))\n      for (i = 0; i < elements.length; i++) {\n        value = callback(elements[i], i)\n        if (value != null) values.push(value)\n      }\n    else\n      for (key in elements) {\n        value = callback(elements[key], key)\n        if (value != null) values.push(value)\n      }\n    return flatten(values)\n  }\n\n  $.each = function(elements, callback){\n    var i, key\n    if (likeArray(elements)) {\n      for (i = 0; i < elements.length; i++)\n        if (callback.call(elements[i], i, elements[i]) === false) return elements\n    } else {\n      for (key in elements)\n        if (callback.call(elements[key], key, elements[key]) === false) return elements\n    }\n\n    return elements\n  }\n\n  $.grep = function(elements, callback){\n    return filter.call(elements, callback)\n  }\n\n  if (window.JSON) $.parseJSON = JSON.parse\n\n  // Populate the class2type map\n  $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\n  })\n\n  // Define methods that will be available on all\n  // Zepto collections\n  $.fn = {\n    constructor: zepto.Z,\n    length: 0,\n\n    // Because a collection acts like an array\n    // copy over these useful array functions.\n    forEach: emptyArray.forEach,\n    reduce: emptyArray.reduce,\n    push: emptyArray.push,\n    sort: emptyArray.sort,\n    splice: emptyArray.splice,\n    indexOf: emptyArray.indexOf,\n    concat: function(){\n      var i, value, args = []\n      for (i = 0; i < arguments.length; i++) {\n        value = arguments[i]\n        args[i] = zepto.isZ(value) ? value.toArray() : value\n      }\n      return concat.apply(zepto.isZ(this) ? this.toArray() : this, args)\n    },\n\n    // `map` and `slice` in the jQuery API work differently\n    // from their array counterparts\n    map: function(fn){\n      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\n    },\n    slice: function(){\n      return $(slice.apply(this, arguments))\n    },\n\n    ready: function(callback){\n      // need to check if document.body exists for IE as that browser reports\n      // document ready when it hasn't yet created the body element\n      if (readyRE.test(document.readyState) && document.body) callback($)\n      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\n      return this\n    },\n    get: function(idx){\n      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n    },\n    toArray: function(){ return this.get() },\n    size: function(){\n      return this.length\n    },\n    remove: function(){\n      return this.each(function(){\n        if (this.parentNode != null)\n          this.parentNode.removeChild(this)\n      })\n    },\n    each: function(callback){\n      emptyArray.every.call(this, function(el, idx){\n        return callback.call(el, idx, el) !== false\n      })\n      return this\n    },\n    filter: function(selector){\n      if (isFunction(selector)) return this.not(this.not(selector))\n      return $(filter.call(this, function(element){\n        return zepto.matches(element, selector)\n      }))\n    },\n    add: function(selector,context){\n      return $(uniq(this.concat($(selector,context))))\n    },\n    is: function(selector){\n      return this.length > 0 && zepto.matches(this[0], selector)\n    },\n    not: function(selector){\n      var nodes=[]\n      if (isFunction(selector) && selector.call !== undefined)\n        this.each(function(idx){\n          if (!selector.call(this,idx)) nodes.push(this)\n        })\n      else {\n        var excludes = typeof selector == 'string' ? this.filter(selector) :\n          (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n        this.forEach(function(el){\n          if (excludes.indexOf(el) < 0) nodes.push(el)\n        })\n      }\n      return $(nodes)\n    },\n    has: function(selector){\n      return this.filter(function(){\n        return isObject(selector) ?\n          $.contains(this, selector) :\n          $(this).find(selector).size()\n      })\n    },\n    eq: function(idx){\n      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\n    },\n    first: function(){\n      var el = this[0]\n      return el && !isObject(el) ? el : $(el)\n    },\n    last: function(){\n      var el = this[this.length - 1]\n      return el && !isObject(el) ? el : $(el)\n    },\n    find: function(selector){\n      var result, $this = this\n      if (!selector) result = $()\n      else if (typeof selector == 'object')\n        result = $(selector).filter(function(){\n          var node = this\n          return emptyArray.some.call($this, function(parent){\n            return $.contains(parent, node)\n          })\n        })\n      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\n      else result = this.map(function(){ return zepto.qsa(this, selector) })\n      return result\n    },\n    closest: function(selector, context){\n      var nodes = [], collection = typeof selector == 'object' && $(selector)\n      this.each(function(_, node){\n        while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\n          node = node !== context && !isDocument(node) && node.parentNode\n        if (node && nodes.indexOf(node) < 0) nodes.push(node)\n      })\n      return $(nodes)\n    },\n    parents: function(selector){\n      var ancestors = [], nodes = this\n      while (nodes.length > 0)\n        nodes = $.map(nodes, function(node){\n          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n            ancestors.push(node)\n            return node\n          }\n        })\n      return filtered(ancestors, selector)\n    },\n    parent: function(selector){\n      return filtered(uniq(this.pluck('parentNode')), selector)\n    },\n    children: function(selector){\n      return filtered(this.map(function(){ return children(this) }), selector)\n    },\n    contents: function() {\n      return this.map(function() { return this.contentDocument || slice.call(this.childNodes) })\n    },\n    siblings: function(selector){\n      return filtered(this.map(function(i, el){\n        return filter.call(children(el.parentNode), function(child){ return child!==el })\n      }), selector)\n    },\n    empty: function(){\n      return this.each(function(){ this.innerHTML = '' })\n    },\n    // `pluck` is borrowed from Prototype.js\n    pluck: function(property){\n      return $.map(this, function(el){ return el[property] })\n    },\n    show: function(){\n      return this.each(function(){\n        this.style.display == \"none\" && (this.style.display = '')\n        if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\n          this.style.display = defaultDisplay(this.nodeName)\n      })\n    },\n    replaceWith: function(newContent){\n      return this.before(newContent).remove()\n    },\n    wrap: function(structure){\n      var func = isFunction(structure)\n      if (this[0] && !func)\n        var dom   = $(structure).get(0),\n            clone = dom.parentNode || this.length > 1\n\n      return this.each(function(index){\n        $(this).wrapAll(\n          func ? structure.call(this, index) :\n            clone ? dom.cloneNode(true) : dom\n        )\n      })\n    },\n    wrapAll: function(structure){\n      if (this[0]) {\n        $(this[0]).before(structure = $(structure))\n        var children\n        // drill down to the inmost element\n        while ((children = structure.children()).length) structure = children.first()\n        $(structure).append(this)\n      }\n      return this\n    },\n    wrapInner: function(structure){\n      var func = isFunction(structure)\n      return this.each(function(index){\n        var self = $(this), contents = self.contents(),\n            dom  = func ? structure.call(this, index) : structure\n        contents.length ? contents.wrapAll(dom) : self.append(dom)\n      })\n    },\n    unwrap: function(){\n      this.parent().each(function(){\n        $(this).replaceWith($(this).children())\n      })\n      return this\n    },\n    clone: function(){\n      return this.map(function(){ return this.cloneNode(true) })\n    },\n    hide: function(){\n      return this.css(\"display\", \"none\")\n    },\n    toggle: function(setting){\n      return this.each(function(){\n        var el = $(this)\n        ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n      })\n    },\n    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\n    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\n    html: function(html){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var originHtml = this.innerHTML\n          $(this).empty().append( funcArg(this, html, idx, originHtml) )\n        }) :\n        (0 in this ? this[0].innerHTML : null)\n    },\n    text: function(text){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var newText = funcArg(this, text, idx, this.textContent)\n          this.textContent = newText == null ? '' : ''+newText\n        }) :\n        (0 in this ? this.pluck('textContent').join(\"\") : null)\n    },\n    attr: function(name, value){\n      var result\n      return (typeof name == 'string' && !(1 in arguments)) ?\n        (0 in this && this[0].nodeType == 1 && (result = this[0].getAttribute(name)) != null ? result : undefined) :\n        this.each(function(idx){\n          if (this.nodeType !== 1) return\n          if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\n          else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\n        })\n    },\n    removeAttr: function(name){\n      return this.each(function(){ this.nodeType === 1 && name.split(' ').forEach(function(attribute){\n        setAttribute(this, attribute)\n      }, this)})\n    },\n    prop: function(name, value){\n      name = propMap[name] || name\n      return (1 in arguments) ?\n        this.each(function(idx){\n          this[name] = funcArg(this, value, idx, this[name])\n        }) :\n        (this[0] && this[0][name])\n    },\n    removeProp: function(name){\n      name = propMap[name] || name\n      return this.each(function(){ delete this[name] })\n    },\n    data: function(name, value){\n      var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase()\n\n      var data = (1 in arguments) ?\n        this.attr(attrName, value) :\n        this.attr(attrName)\n\n      return data !== null ? deserializeValue(data) : undefined\n    },\n    val: function(value){\n      if (0 in arguments) {\n        if (value == null) value = \"\"\n        return this.each(function(idx){\n          this.value = funcArg(this, value, idx, this.value)\n        })\n      } else {\n        return this[0] && (this[0].multiple ?\n           $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :\n           this[0].value)\n      }\n    },\n    offset: function(coordinates){\n      if (coordinates) return this.each(function(index){\n        var $this = $(this),\n            coords = funcArg(this, coordinates, index, $this.offset()),\n            parentOffset = $this.offsetParent().offset(),\n            props = {\n              top:  coords.top  - parentOffset.top,\n              left: coords.left - parentOffset.left\n            }\n\n        if ($this.css('position') == 'static') props['position'] = 'relative'\n        $this.css(props)\n      })\n      if (!this.length) return null\n      if (document.documentElement !== this[0] && !$.contains(document.documentElement, this[0]))\n        return {top: 0, left: 0}\n      var obj = this[0].getBoundingClientRect()\n      return {\n        left: obj.left + window.pageXOffset,\n        top: obj.top + window.pageYOffset,\n        width: Math.round(obj.width),\n        height: Math.round(obj.height)\n      }\n    },\n    css: function(property, value){\n      if (arguments.length < 2) {\n        var element = this[0]\n        if (typeof property == 'string') {\n          if (!element) return\n          return element.style[camelize(property)] || getComputedStyle(element, '').getPropertyValue(property)\n        } else if (isArray(property)) {\n          if (!element) return\n          var props = {}\n          var computedStyle = getComputedStyle(element, '')\n          $.each(property, function(_, prop){\n            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))\n          })\n          return props\n        }\n      }\n\n      var css = ''\n      if (type(property) == 'string') {\n        if (!value && value !== 0)\n          this.each(function(){ this.style.removeProperty(dasherize(property)) })\n        else\n          css = dasherize(property) + \":\" + maybeAddPx(property, value)\n      } else {\n        for (key in property)\n          if (!property[key] && property[key] !== 0)\n            this.each(function(){ this.style.removeProperty(dasherize(key)) })\n          else\n            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n      }\n\n      return this.each(function(){ this.style.cssText += ';' + css })\n    },\n    index: function(element){\n      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\n    },\n    hasClass: function(name){\n      if (!name) return false\n      return emptyArray.some.call(this, function(el){\n        return this.test(className(el))\n      }, classRE(name))\n    },\n    addClass: function(name){\n      if (!name) return this\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        classList = []\n        var cls = className(this), newName = funcArg(this, name, idx, cls)\n        newName.split(/\\s+/g).forEach(function(klass){\n          if (!$(this).hasClass(klass)) classList.push(klass)\n        }, this)\n        classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\n      })\n    },\n    removeClass: function(name){\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        if (name === undefined) return className(this, '')\n        classList = className(this)\n        funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\n          classList = classList.replace(classRE(klass), \" \")\n        })\n        className(this, classList.trim())\n      })\n    },\n    toggleClass: function(name, when){\n      if (!name) return this\n      return this.each(function(idx){\n        var $this = $(this), names = funcArg(this, name, idx, className(this))\n        names.split(/\\s+/g).forEach(function(klass){\n          (when === undefined ? !$this.hasClass(klass) : when) ?\n            $this.addClass(klass) : $this.removeClass(klass)\n        })\n      })\n    },\n    scrollTop: function(value){\n      if (!this.length) return\n      var hasScrollTop = 'scrollTop' in this[0]\n      if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset\n      return this.each(hasScrollTop ?\n        function(){ this.scrollTop = value } :\n        function(){ this.scrollTo(this.scrollX, value) })\n    },\n    scrollLeft: function(value){\n      if (!this.length) return\n      var hasScrollLeft = 'scrollLeft' in this[0]\n      if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset\n      return this.each(hasScrollLeft ?\n        function(){ this.scrollLeft = value } :\n        function(){ this.scrollTo(value, this.scrollY) })\n    },\n    position: function() {\n      if (!this.length) return\n\n      var elem = this[0],\n        // Get *real* offsetParent\n        offsetParent = this.offsetParent(),\n        // Get correct offsets\n        offset       = this.offset(),\n        parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\n\n      // Subtract element margins\n      // note: when an element has margin: auto the offsetLeft and marginLeft\n      // are the same in Safari causing offset.left to incorrectly be 0\n      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\n      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\n\n      // Add offsetParent borders\n      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\n      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\n\n      // Subtract the two offsets\n      return {\n        top:  offset.top  - parentOffset.top,\n        left: offset.left - parentOffset.left\n      }\n    },\n    offsetParent: function() {\n      return this.map(function(){\n        var parent = this.offsetParent || document.body\n        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\n          parent = parent.offsetParent\n        return parent\n      })\n    }\n  }\n\n  // for now\n  $.fn.detach = $.fn.remove\n\n  // Generate the `width` and `height` functions\n  ;['width', 'height'].forEach(function(dimension){\n    var dimensionProperty =\n      dimension.replace(/./, function(m){ return m[0].toUpperCase() })\n\n    $.fn[dimension] = function(value){\n      var offset, el = this[0]\n      if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :\n        isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :\n        (offset = this.offset()) && offset[dimension]\n      else return this.each(function(idx){\n        el = $(this)\n        el.css(dimension, funcArg(this, value, idx, el[dimension]()))\n      })\n    }\n  })\n\n  function traverseNode(node, fun) {\n    fun(node)\n    for (var i = 0, len = node.childNodes.length; i < len; i++)\n      traverseNode(node.childNodes[i], fun)\n  }\n\n  // Generate the `after`, `prepend`, `before`, `append`,\n  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\n  adjacencyOperators.forEach(function(operator, operatorIndex) {\n    var inside = operatorIndex % 2 //=> prepend, append\n\n    $.fn[operator] = function(){\n      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\n      var argType, nodes = $.map(arguments, function(arg) {\n            var arr = []\n            argType = type(arg)\n            if (argType == \"array\") {\n              arg.forEach(function(el) {\n                if (el.nodeType !== undefined) return arr.push(el)\n                else if ($.zepto.isZ(el)) return arr = arr.concat(el.get())\n                arr = arr.concat(zepto.fragment(el))\n              })\n              return arr\n            }\n            return argType == \"object\" || arg == null ?\n              arg : zepto.fragment(arg)\n          }),\n          parent, copyByClone = this.length > 1\n      if (nodes.length < 1) return this\n\n      return this.each(function(_, target){\n        parent = inside ? target : target.parentNode\n\n        // convert all methods to a \"before\" operation\n        target = operatorIndex == 0 ? target.nextSibling :\n                 operatorIndex == 1 ? target.firstChild :\n                 operatorIndex == 2 ? target :\n                 null\n\n        var parentInDocument = $.contains(document.documentElement, parent)\n\n        nodes.forEach(function(node){\n          if (copyByClone) node = node.cloneNode(true)\n          else if (!parent) return $(node).remove()\n\n          parent.insertBefore(node, target)\n          if (parentInDocument) traverseNode(node, function(el){\n            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\n               (!el.type || el.type === 'text/javascript') && !el.src){\n              var target = el.ownerDocument ? el.ownerDocument.defaultView : window\n              target['eval'].call(target, el.innerHTML)\n            }\n          })\n        })\n      })\n    }\n\n    // after    => insertAfter\n    // prepend  => prependTo\n    // before   => insertBefore\n    // append   => appendTo\n    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\n      $(html)[operator](this)\n      return this\n    }\n  })\n\n  zepto.Z.prototype = Z.prototype = $.fn\n\n  // Export internal API functions in the `$.zepto` namespace\n  zepto.uniq = uniq\n  zepto.deserializeValue = deserializeValue\n  $.zepto = zepto\n\n  return $\n})()\n\nwindow.Zepto = Zepto\nwindow.$ === undefined && (window.$ = Zepto)\n\n;(function($){\n  var _zid = 1, undefined,\n      slice = Array.prototype.slice,\n      isFunction = $.isFunction,\n      isString = function(obj){ return typeof obj == 'string' },\n      handlers = {},\n      specialEvents={},\n      focusinSupported = 'onfocusin' in window,\n      focus = { focus: 'focusin', blur: 'focusout' },\n      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\n\n  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\n\n  function zid(element) {\n    return element._zid || (element._zid = _zid++)\n  }\n  function findHandlers(element, event, fn, selector) {\n    event = parse(event)\n    if (event.ns) var matcher = matcherFor(event.ns)\n    return (handlers[zid(element)] || []).filter(function(handler) {\n      return handler\n        && (!event.e  || handler.e == event.e)\n        && (!event.ns || matcher.test(handler.ns))\n        && (!fn       || zid(handler.fn) === zid(fn))\n        && (!selector || handler.sel == selector)\n    })\n  }\n  function parse(event) {\n    var parts = ('' + event).split('.')\n    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\n  }\n  function matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\n  }\n\n  function eventCapture(handler, captureSetting) {\n    return handler.del &&\n      (!focusinSupported && (handler.e in focus)) ||\n      !!captureSetting\n  }\n\n  function realEvent(type) {\n    return hover[type] || (focusinSupported && focus[type]) || type\n  }\n\n  function add(element, events, fn, data, selector, delegator, capture){\n    var id = zid(element), set = (handlers[id] || (handlers[id] = []))\n    events.split(/\\s/).forEach(function(event){\n      if (event == 'ready') return $(document).ready(fn)\n      var handler   = parse(event)\n      handler.fn    = fn\n      handler.sel   = selector\n      // emulate mouseenter, mouseleave\n      if (handler.e in hover) fn = function(e){\n        var related = e.relatedTarget\n        if (!related || (related !== this && !$.contains(this, related)))\n          return handler.fn.apply(this, arguments)\n      }\n      handler.del   = delegator\n      var callback  = delegator || fn\n      handler.proxy = function(e){\n        e = compatible(e)\n        if (e.isImmediatePropagationStopped()) return\n        e.data = data\n        var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))\n        if (result === false) e.preventDefault(), e.stopPropagation()\n        return result\n      }\n      handler.i = set.length\n      set.push(handler)\n      if ('addEventListener' in element)\n        element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n    })\n  }\n  function remove(element, events, fn, selector, capture){\n    var id = zid(element)\n    ;(events || '').split(/\\s/).forEach(function(event){\n      findHandlers(element, event, fn, selector).forEach(function(handler){\n        delete handlers[id][handler.i]\n      if ('removeEventListener' in element)\n        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n      })\n    })\n  }\n\n  $.event = { add: add, remove: remove }\n\n  $.proxy = function(fn, context) {\n    var args = (2 in arguments) && slice.call(arguments, 2)\n    if (isFunction(fn)) {\n      var proxyFn = function(){ return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments) }\n      proxyFn._zid = zid(fn)\n      return proxyFn\n    } else if (isString(context)) {\n      if (args) {\n        args.unshift(fn[context], fn)\n        return $.proxy.apply(null, args)\n      } else {\n        return $.proxy(fn[context], fn)\n      }\n    } else {\n      throw new TypeError(\"expected function\")\n    }\n  }\n\n  $.fn.bind = function(event, data, callback){\n    return this.on(event, data, callback)\n  }\n  $.fn.unbind = function(event, callback){\n    return this.off(event, callback)\n  }\n  $.fn.one = function(event, selector, data, callback){\n    return this.on(event, selector, data, callback, 1)\n  }\n\n  var returnTrue = function(){return true},\n      returnFalse = function(){return false},\n      ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$|webkitMovement[XY]$)/,\n      eventMethods = {\n        preventDefault: 'isDefaultPrevented',\n        stopImmediatePropagation: 'isImmediatePropagationStopped',\n        stopPropagation: 'isPropagationStopped'\n      }\n\n  function compatible(event, source) {\n    if (source || !event.isDefaultPrevented) {\n      source || (source = event)\n\n      $.each(eventMethods, function(name, predicate) {\n        var sourceMethod = source[name]\n        event[name] = function(){\n          this[predicate] = returnTrue\n          return sourceMethod && sourceMethod.apply(source, arguments)\n        }\n        event[predicate] = returnFalse\n      })\n\n      event.timeStamp || (event.timeStamp = Date.now())\n\n      if (source.defaultPrevented !== undefined ? source.defaultPrevented :\n          'returnValue' in source ? source.returnValue === false :\n          source.getPreventDefault && source.getPreventDefault())\n        event.isDefaultPrevented = returnTrue\n    }\n    return event\n  }\n\n  function createProxy(event) {\n    var key, proxy = { originalEvent: event }\n    for (key in event)\n      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\n\n    return compatible(proxy, event)\n  }\n\n  $.fn.delegate = function(selector, event, callback){\n    return this.on(event, selector, callback)\n  }\n  $.fn.undelegate = function(selector, event, callback){\n    return this.off(event, selector, callback)\n  }\n\n  $.fn.live = function(event, callback){\n    $(document.body).delegate(this.selector, event, callback)\n    return this\n  }\n  $.fn.die = function(event, callback){\n    $(document.body).undelegate(this.selector, event, callback)\n    return this\n  }\n\n  $.fn.on = function(event, selector, data, callback, one){\n    var autoRemove, delegator, $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.on(type, selector, data, fn, one)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = data, data = selector, selector = undefined\n    if (callback === undefined || data === false)\n      callback = data, data = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(_, element){\n      if (one) autoRemove = function(e){\n        remove(element, e.type, callback)\n        return callback.apply(this, arguments)\n      }\n\n      if (selector) delegator = function(e){\n        var evt, match = $(e.target).closest(selector, element).get(0)\n        if (match && match !== element) {\n          evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\n          return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))\n        }\n      }\n\n      add(element, event, callback, data, selector, delegator || autoRemove)\n    })\n  }\n  $.fn.off = function(event, selector, callback){\n    var $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.off(type, selector, fn)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = selector, selector = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(){\n      remove(this, event, callback, selector)\n    })\n  }\n\n  $.fn.trigger = function(event, args){\n    event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)\n    event._args = args\n    return this.each(function(){\n      // handle focus(), blur() by calling them directly\n      if (event.type in focus && typeof this[event.type] == \"function\") this[event.type]()\n      // items in the collection might not be DOM elements\n      else if ('dispatchEvent' in this) this.dispatchEvent(event)\n      else $(this).triggerHandler(event, args)\n    })\n  }\n\n  // triggers event handlers on current element just as if an event occurred,\n  // doesn't trigger an actual event, doesn't bubble\n  $.fn.triggerHandler = function(event, args){\n    var e, result\n    this.each(function(i, element){\n      e = createProxy(isString(event) ? $.Event(event) : event)\n      e._args = args\n      e.target = element\n      $.each(findHandlers(element, event.type || event), function(i, handler){\n        result = handler.proxy(e)\n        if (e.isImmediatePropagationStopped()) return false\n      })\n    })\n    return result\n  }\n\n  // shortcut methods for `.bind(event, fn)` for each event type\n  ;('focusin focusout focus blur load resize scroll unload click dblclick '+\n  'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\n  'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n    $.fn[event] = function(callback) {\n      return (0 in arguments) ?\n        this.bind(event, callback) :\n        this.trigger(event)\n    }\n  })\n\n  $.Event = function(type, props) {\n    if (!isString(type)) props = type, type = props.type\n    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\n    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\n    event.initEvent(type, bubbles, true)\n    return compatible(event)\n  }\n\n})(Zepto)\n\n;(function($){\n  var jsonpID = +new Date(),\n      document = window.document,\n      key,\n      name,\n      rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n      scriptTypeRE = /^(?:text|application)\\/javascript/i,\n      xmlTypeRE = /^(?:text|application)\\/xml/i,\n      jsonType = 'application/json',\n      htmlType = 'text/html',\n      blankRE = /^\\s*$/,\n      originAnchor = document.createElement('a')\n\n  originAnchor.href = window.location.href\n\n  // trigger a custom event and return false if it was cancelled\n  function triggerAndReturn(context, eventName, data) {\n    var event = $.Event(eventName)\n    $(context).trigger(event, data)\n    return !event.isDefaultPrevented()\n  }\n\n  // trigger an Ajax \"global\" event\n  function triggerGlobal(settings, context, eventName, data) {\n    if (settings.global) return triggerAndReturn(context || document, eventName, data)\n  }\n\n  // Number of active Ajax requests\n  $.active = 0\n\n  function ajaxStart(settings) {\n    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n  }\n  function ajaxStop(settings) {\n    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n  }\n\n  // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n  function ajaxBeforeSend(xhr, settings) {\n    var context = settings.context\n    if (settings.beforeSend.call(context, xhr, settings) === false ||\n        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n      return false\n\n    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n  }\n  function ajaxSuccess(data, xhr, settings, deferred) {\n    var context = settings.context, status = 'success'\n    settings.success.call(context, data, status, xhr)\n    if (deferred) deferred.resolveWith(context, [data, status, xhr])\n    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n    ajaxComplete(status, xhr, settings)\n  }\n  // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n  function ajaxError(error, type, xhr, settings, deferred) {\n    var context = settings.context\n    settings.error.call(context, xhr, type, error)\n    if (deferred) deferred.rejectWith(context, [xhr, type, error])\n    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n    ajaxComplete(type, xhr, settings)\n  }\n  // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n  function ajaxComplete(status, xhr, settings) {\n    var context = settings.context\n    settings.complete.call(context, xhr, status)\n    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n    ajaxStop(settings)\n  }\n\n  function ajaxDataFilter(data, type, settings) {\n    if (settings.dataFilter == empty) return data\n    var context = settings.context\n    return settings.dataFilter.call(context, data, type)\n  }\n\n  // Empty function, used as default callback\n  function empty() {}\n\n  $.ajaxJSONP = function(options, deferred){\n    if (!('type' in options)) return $.ajax(options)\n\n    var _callbackName = options.jsonpCallback,\n      callbackName = ($.isFunction(_callbackName) ?\n        _callbackName() : _callbackName) || ('Zepto' + (jsonpID++)),\n      script = document.createElement('script'),\n      originalCallback = window[callbackName],\n      responseData,\n      abort = function(errorType) {\n        $(script).triggerHandler('error', errorType || 'abort')\n      },\n      xhr = { abort: abort }, abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    $(script).on('load error', function(e, errorType){\n      clearTimeout(abortTimeout)\n      $(script).off().remove()\n\n      if (e.type == 'error' || !responseData) {\n        ajaxError(null, errorType || 'error', xhr, options, deferred)\n      } else {\n        ajaxSuccess(responseData[0], xhr, options, deferred)\n      }\n\n      window[callbackName] = originalCallback\n      if (responseData && $.isFunction(originalCallback))\n        originalCallback(responseData[0])\n\n      originalCallback = responseData = undefined\n    })\n\n    if (ajaxBeforeSend(xhr, options) === false) {\n      abort('abort')\n      return xhr\n    }\n\n    window[callbackName] = function(){\n      responseData = arguments\n    }\n\n    script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\n    document.head.appendChild(script)\n\n    if (options.timeout > 0) abortTimeout = setTimeout(function(){\n      abort('timeout')\n    }, options.timeout)\n\n    return xhr\n  }\n\n  $.ajaxSettings = {\n    // Default type of request\n    type: 'GET',\n    // Callback that is executed before request\n    beforeSend: empty,\n    // Callback that is executed if the request succeeds\n    success: empty,\n    // Callback that is executed the the server drops error\n    error: empty,\n    // Callback that is executed on request complete (both: error and success)\n    complete: empty,\n    // The context for the callbacks\n    context: null,\n    // Whether to trigger \"global\" Ajax events\n    global: true,\n    // Transport\n    xhr: function () {\n      return new window.XMLHttpRequest()\n    },\n    // MIME types mapping\n    // IIS returns Javascript as \"application/x-javascript\"\n    accepts: {\n      script: 'text/javascript, application/javascript, application/x-javascript',\n      json:   jsonType,\n      xml:    'application/xml, text/xml',\n      html:   htmlType,\n      text:   'text/plain'\n    },\n    // Whether the request is to another domain\n    crossDomain: false,\n    // Default timeout\n    timeout: 0,\n    // Whether data should be serialized to string\n    processData: true,\n    // Whether the browser should be allowed to cache GET responses\n    cache: true,\n    //Used to handle the raw response data of XMLHttpRequest.\n    //This is a pre-filtering function to sanitize the response.\n    //The sanitized response should be returned\n    dataFilter: empty\n  }\n\n  function mimeToDataType(mime) {\n    if (mime) mime = mime.split(';', 2)[0]\n    return mime && ( mime == htmlType ? 'html' :\n      mime == jsonType ? 'json' :\n      scriptTypeRE.test(mime) ? 'script' :\n      xmlTypeRE.test(mime) && 'xml' ) || 'text'\n  }\n\n  function appendQuery(url, query) {\n    if (query == '') return url\n    return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n  }\n\n  // serialize payload and append it to the URL for GET requests\n  function serializeData(options) {\n    if (options.processData && options.data && $.type(options.data) != \"string\")\n      options.data = $.param(options.data, options.traditional)\n    if (options.data && (!options.type || options.type.toUpperCase() == 'GET' || 'jsonp' == options.dataType))\n      options.url = appendQuery(options.url, options.data), options.data = undefined\n  }\n\n  $.ajax = function(options){\n    var settings = $.extend({}, options || {}),\n        deferred = $.Deferred && $.Deferred(),\n        urlAnchor, hashIndex\n    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n    ajaxStart(settings)\n\n    if (!settings.crossDomain) {\n      urlAnchor = document.createElement('a')\n      urlAnchor.href = settings.url\n      // cleans up URL for .href (IE only), see https://github.com/madrobby/zepto/pull/1049\n      urlAnchor.href = urlAnchor.href\n      settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\n    }\n\n    if (!settings.url) settings.url = window.location.toString()\n    if ((hashIndex = settings.url.indexOf('#')) > -1) settings.url = settings.url.slice(0, hashIndex)\n    serializeData(settings)\n\n    var dataType = settings.dataType, hasPlaceholder = /\\?.+=\\?/.test(settings.url)\n    if (hasPlaceholder) dataType = 'jsonp'\n\n    if (settings.cache === false || (\n         (!options || options.cache !== true) &&\n         ('script' == dataType || 'jsonp' == dataType)\n        ))\n      settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n    if ('jsonp' == dataType) {\n      if (!hasPlaceholder)\n        settings.url = appendQuery(settings.url,\n          settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\n      return $.ajaxJSONP(settings, deferred)\n    }\n\n    var mime = settings.accepts[dataType],\n        headers = { },\n        setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n        protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n        xhr = settings.xhr(),\n        nativeSetHeader = xhr.setRequestHeader,\n        abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\n    setHeader('Accept', mime || '*/*')\n    if (mime = settings.mimeType || mime) {\n      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n      xhr.overrideMimeType && xhr.overrideMimeType(mime)\n    }\n    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n      setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n\n    if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])\n    xhr.setRequestHeader = setHeader\n\n    xhr.onreadystatechange = function(){\n      if (xhr.readyState == 4) {\n        xhr.onreadystatechange = empty\n        clearTimeout(abortTimeout)\n        var result, error = false\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n          dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n\n          if (xhr.responseType == 'arraybuffer' || xhr.responseType == 'blob')\n            result = xhr.response\n          else {\n            result = xhr.responseText\n\n            try {\n              // http://perfectionkills.com/global-eval-what-are-the-options/\n              // sanitize response accordingly if data filter callback provided\n              result = ajaxDataFilter(result, dataType, settings)\n              if (dataType == 'script')    (1,eval)(result)\n              else if (dataType == 'xml')  result = xhr.responseXML\n              else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n            } catch (e) { error = e }\n\n            if (error) return ajaxError(error, 'parsererror', xhr, settings, deferred)\n          }\n\n          ajaxSuccess(result, xhr, settings, deferred)\n        } else {\n          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\n        }\n      }\n    }\n\n    if (ajaxBeforeSend(xhr, settings) === false) {\n      xhr.abort()\n      ajaxError(null, 'abort', xhr, settings, deferred)\n      return xhr\n    }\n\n    var async = 'async' in settings ? settings.async : true\n    xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n    if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n\n    for (name in headers) nativeSetHeader.apply(xhr, headers[name])\n\n    if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n        xhr.onreadystatechange = empty\n        xhr.abort()\n        ajaxError(null, 'timeout', xhr, settings, deferred)\n      }, settings.timeout)\n\n    // avoid sending empty string (#319)\n    xhr.send(settings.data ? settings.data : null)\n    return xhr\n  }\n\n  // handle optional data/success arguments\n  function parseArguments(url, data, success, dataType) {\n    if ($.isFunction(data)) dataType = success, success = data, data = undefined\n    if (!$.isFunction(success)) dataType = success, success = undefined\n    return {\n      url: url\n    , data: data\n    , success: success\n    , dataType: dataType\n    }\n  }\n\n  $.get = function(/* url, data, success, dataType */){\n    return $.ajax(parseArguments.apply(null, arguments))\n  }\n\n  $.post = function(/* url, data, success, dataType */){\n    var options = parseArguments.apply(null, arguments)\n    options.type = 'POST'\n    return $.ajax(options)\n  }\n\n  $.getJSON = function(/* url, data, success */){\n    var options = parseArguments.apply(null, arguments)\n    options.dataType = 'json'\n    return $.ajax(options)\n  }\n\n  $.fn.load = function(url, data, success){\n    if (!this.length) return this\n    var self = this, parts = url.split(/\\s/), selector,\n        options = parseArguments(url, data, success),\n        callback = options.success\n    if (parts.length > 1) options.url = parts[0], selector = parts[1]\n    options.success = function(response){\n      self.html(selector ?\n        $('<div>').html(response.replace(rscript, \"\")).find(selector)\n        : response)\n      callback && callback.apply(self, arguments)\n    }\n    $.ajax(options)\n    return this\n  }\n\n  var escape = encodeURIComponent\n\n  function serialize(params, obj, traditional, scope){\n    var type, array = $.isArray(obj), hash = $.isPlainObject(obj)\n    $.each(obj, function(key, value) {\n      type = $.type(value)\n      if (scope) key = traditional ? scope :\n        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\n      // handle data in serializeArray() format\n      if (!scope && array) params.add(value.name, value.value)\n      // recurse into nested objects\n      else if (type == \"array\" || (!traditional && type == \"object\"))\n        serialize(params, value, traditional, key)\n      else params.add(key, value)\n    })\n  }\n\n  $.param = function(obj, traditional){\n    var params = []\n    params.add = function(key, value) {\n      if ($.isFunction(value)) value = value()\n      if (value == null) value = \"\"\n      this.push(escape(key) + '=' + escape(value))\n    }\n    serialize(params, obj, traditional)\n    return params.join('&').replace(/%20/g, '+')\n  }\n})(Zepto)\n\n;(function($){\n  $.fn.serializeArray = function() {\n    var name, type, result = [],\n      add = function(value) {\n        if (value.forEach) return value.forEach(add)\n        result.push({ name: name, value: value })\n      }\n    if (this[0]) $.each(this[0].elements, function(_, field){\n      type = field.type, name = field.name\n      if (name && field.nodeName.toLowerCase() != 'fieldset' &&\n        !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\n        ((type != 'radio' && type != 'checkbox') || field.checked))\n          add($(field).val())\n    })\n    return result\n  }\n\n  $.fn.serialize = function(){\n    var result = []\n    this.serializeArray().forEach(function(elm){\n      result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\n    })\n    return result.join('&')\n  }\n\n  $.fn.submit = function(callback) {\n    if (0 in arguments) this.bind('submit', callback)\n    else if (this.length) {\n      var event = $.Event('submit')\n      this.eq(0).trigger(event)\n      if (!event.isDefaultPrevented()) this.get(0).submit()\n    }\n    return this\n  }\n\n})(Zepto)\n\n;(function(){\n  // getComputedStyle shouldn't freak out when called\n  // without a valid element as argument\n  try {\n    getComputedStyle(undefined)\n  } catch(e) {\n    var nativeGetComputedStyle = getComputedStyle\n    window.getComputedStyle = function(element, pseudoElement){\n      try {\n        return nativeGetComputedStyle(element, pseudoElement)\n      } catch(e) {\n        return null\n      }\n    }\n  }\n})()\n  return Zepto\n}))\n",";(function(){\n    window.jky = window.jky || {};\n    jky.util = {\n        // 获取url参数\n    \tgetQueryString: function(name) {\n    \t\tvar reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\n    \t\tvar r = window.location.search.substr(1).match(reg);\n    \t\tif (r != null) return (r[2]); return null;\n    \t},\n    \tgetRequest: function () {\n\t\t    var url = location.search; //获取url中\"?\"符后的字串\n\t\t    var theRequest = new Object();\n\t\t    if (url.indexOf(\"?\") != -1) {\n\t\t        var str = url.substr(1);\n\t\t        strs = str.split(\"&\");\n\t\t        for(var i = 0; i < strs.length; i ++) {\n\t\t            theRequest[strs[i].split(\"=\")[0]]=(strs[i].split(\"=\")[1]);\n\t\t        }\n\t\t    }\n\t\t    return theRequest;\n\t\t},\n        // 设置url参数\n        setRequest: function (url, params) {\n            if (typeof(params) != 'object') return url\n            var paramsStrLIst = [];\n            for (var key in params) {\n                var pattern= new RegExp(key + '=([^&]*)&?');\n                url = url.replace(pattern, '')\n                paramsStrLIst.push(key + '=' + params[key])\n            }\n            if(url.match('[\\?]')){\n                return (url+'&' + paramsStrLIst.join('&')).replace('?&', '?');\n            }else{\n                return url+'?' + paramsStrLIst.join('&');\n            }\n        },\n        throttle: function (func, wait, options) {\n              var context, args, result;\n              var timeout = null;\n              // 上次执行时间点\n              var previous = 0;\n              if (!options) options = {};\n              // 延迟执行函数\n              var later = function() {\n                // 若设定了开始边界不执行选项，上次执行时间始终为0\n                previous = options.leading === false ? 0 : (new Date).valueOf();\n                timeout = null;\n                result = func.apply(context, args);\n                if (!timeout) context = args = null;\n              };\n              return function() {\n                var now = (new Date).valueOf();\n                // 首次执行时，如果设定了开始边界不执行选项，将上次执行时间设定为当前时间。\n                if (!previous && options.leading === false) previous = now;\n                // 延迟执行时间间隔\n                var remaining = wait - (now - previous);\n                context = this;\n                args = arguments;\n                // 延迟时间间隔remaining小于等于0，表示上次执行至此所间隔时间已经超过一个时间窗口\n                // remaining大于时间窗口wait，表示客户端系统时间被调整过\n                if (remaining <= 0 || remaining > wait) {\n                  clearTimeout(timeout);\n                  timeout = null;\n                  previous = now;\n                  result = func.apply(context, args);\n                  if (!timeout) context = args = null;\n                //如果延迟执行不存在，且没有设定结尾边界不执行选项\n                } else if (!timeout && options.trailing !== false) {\n                  timeout = setTimeout(later, remaining);\n                }\n                return result;\n              };\n        },\n        // 矫正rem\n        correctrem: function () {\n            var rem_full_width = $(\"<div id='rem-test' style='width:7.5rem'></div>\").appendTo($('body')).width();\n            var device_width = document.documentElement.clientWidth;\n            if (rem_full_width != device_width) {\n                document.documentElement.style.fontSize = (device_width / 7.5) * (device_width / rem_full_width) + 'px';\n            }\n            $('#rem-test').remove();\n        },\n        // toast提示\n        toast: function (msg, time,cb) {\n            var $toastEl = $('<p class=\"jky-toast\">' + msg + '</p>').appendTo($('body'));\n            setTimeout(function () {\n                $toastEl.remove()\n                cb && cb()\n            }, (time || 3000))\n            return $toastEl\n        },\n        /*\n        alert: function (options) {\n            options = options || {};\n            options.type = 'alert';\n            return renderModal(options);\n        },\n        confirm: function (options) {\n            options = options || {};\n            options.type = 'confirm';\n             return renderModal(options);\n        },\n        // loading\n        loading: function (id) {\n            id = id || ''\n            var $loading = $('<div class=\"tsh-loading\" id=\"' + id +'\"><div class=\"loading-box\"><i class=\"icon iconfont icon-loading-m\"></i></div></div>').appendTo($('body'));\n            return $loading\n        },\n        // page-loading\n        pageloading: function (id) {\n            id = id || ''\n            var $loading = $('<div class=\"tsh-page-loading\" id=\"' + id +'\"><img src=\"//image.teshehui.com/mui/style/tmall/img/common/loading.gif\" alt=\"\" class=\"loading-img\"></div>').appendTo($('body'));\n            return $loading\n        },\n        // 全局导航\n        globalnav: function (id) {\n            id = id || '';\n            var htmlstr = '<div class=\"tsh-gl-nav\" id=\"' + id +'\">';\n            htmlstr += '<i class=\"open-button\">导航</i>';\n            htmlstr += '<i class=\"icon iconfont icon-close close-button\"></i>';\n            htmlstr += '<a class=\"icon iconfont icon-home to-home\" href=\"/\"></a>';\n            htmlstr += '<a class=\"icon iconfont icon-geren to-user\" href=\"/user\"></a>';\n            htmlstr += '</div>';\n            var $tsh_gl_nav = $(htmlstr).appendTo($('body'));\n            $('.tsh-gl-nav .open-button').on('tap', function () {\n                $tsh_gl_nav.addClass('to-show');\n            })\n            $('.tsh-gl-nav .close-button').on('tap', function () {\n                $tsh_gl_nav.removeClass('to-show');\n            })\n            return $tsh_gl_nav\n        }\n        */\n    };\n\n    /*\n    function renderModal (options) {\n        var htmlStr = '';\n        htmlStr += '<div class=\"tsh-modal ' + (options.class || '') + '\">';\n        htmlStr += '<div class=\"modal-panel\">';\n        if (options.title) {\n            htmlStr += '<p class=\"modal-title\">' + options.title + '</p>';\n        }\n        if (options.content) {\n            htmlStr += '<p class=\"modal-content\">' + options.content + '</p>';\n        }\n        if (options.type == 'alert'){\n            htmlStr += '<div class=\"operate-area\">';\n            htmlStr += '<button class=\"ok\">' + (options.okText || '确定') + '</button>';\n            htmlStr += '</div>';\n        } else if (options.type == 'confirm') {\n            htmlStr += '<div class=\"operate-area\">';\n            htmlStr += '<button class=\"cancel\">' + (options.cancelText || '取消') + '</button>';\n            htmlStr += '<button class=\"ok\">' + (options.okText || '确定') + '</button>';\n            htmlStr += '</div>';\n        }\n        htmlStr += '</div>';\n        htmlStr += '</div>';\n        var $modal = $(htmlStr).appendTo($('body'));\n        $modal.find('.ok').on('click', function () {\n            if (options.autoVanish !== false) {\n                $modal.remove();\n            }\n            options.ok && options.ok();\n        });\n        $modal.find('.cancel').on('click', function () {\n            if (options.autoVanish !== false) {\n                $modal.remove();\n            }\n            options.cancel && options.cancel();\n        });\n        return $modal\n    }\n\n    // 补全Array的find方法\n    if (!Array.prototype.find) {\n        Object.defineProperty(Array.prototype, 'find', {\n            value: function(predicate) {\n                'use strict';\n                if (this == null) {\n                    throw new TypeError('Array.prototype.find called on null or undefined');\n                }\n                if (typeof predicate !== 'function') {\n                    throw new TypeError('predicate must be a function');\n                }\n                var list = Object(this);\n                var length = list.length >>> 0;\n                var thisArg = arguments[1];\n                var value;\n\n                for (var i = 0; i < length; i++) {\n                    value = list[i];\n                    if (predicate.call(thisArg, value, i, list)) {\n                        return value;\n                    }\n                }\n                return undefined;\n            }\n        });\n    }\n    if(!Date.prototype.format){\n        Date.prototype.format = function (fmt) {\n            if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n            var expMap = {'M+':this.getMonth()+1,'d+':this.getDate(),'h+':this.getHours(),'m+':this.getMinutes(),'s+':this.getSeconds(),'S':this.getMilliseconds()};\n            for(var exp in expMap){\n                if(new RegExp('('+exp+')').test(fmt)){\n                    fmt = fmt.replace(RegExp.$1,(RegExp.$1.length==1)?(expMap[exp]):((\"00\"+expMap[exp]).substr((\"\"+expMap[exp]).length)));\n                }\n            }\n            return fmt;\n        };\n    }\n*/\n})()\n"]}